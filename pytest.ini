[pytest]
# Pytest configuration for clowclow

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    live: mark test as requiring live Claude Code API access (deselect with '-m "not live"')
    slow: mark test as slow (deselect with '-m "not slow"')
    integration: mark test as integration test
    unit: mark test as unit test

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Output options
addopts =
    -ra
    --strict-markers
    --tb=short

# Coverage options (if coverage is run)
# Run with: pytest --cov=src/clowclow --cov-report=html
[coverage:run]
source = src/clowclow
omit =
    */tests/*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
